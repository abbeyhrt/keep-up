worker_processes 1;
daemon off;

error_log stderr;
events { worker_connections 1024; }

pid /tmp/nginx.pid;

http {
  charset utf-8;
  log_format compression '$remote_addr - $remote_user [$time_local] '
      '"$request" $status $upstream_addr '
      '"$http_referer" "$http_user_agent" "$gzip_ratio"';
  access_log /dev/stdout compression;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;

  large_client_header_buffers 4 64k;

  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gunzip on;
  gzip_static always;
  gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;
  gzip_vary on;

  tcp_nopush on;
  keepalive_timeout 30;
  # Ensure that redirects don't include the internal container PORT - 8080
  port_in_redirect off;

  server {
    listen {{.Port}};
    # root build;
    # index index.html index.htm Default.htm;

    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Host $server_name;

    # Fallback for React Router
    # location / {
    #   try_files $uri $uri/ /index.html;
    # }

    # Temporarily proxy to root path for our GraphQL service. In the future,
    # this will proxy to our UI service.
    location / {
      proxy_pass http://graphql.keepup.company/;
    }

    # Auth Server
    location /login {
      proxy_pass http://graphql.keepup.company;
    }

    location /logout {
      proxy_pass http://graphql.keepup.company;
    }

    location /auth {
      proxy_pass http://graphql.keepup.company;
    }
  }
}
